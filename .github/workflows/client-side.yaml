name: Frontend CI
on:
  push:
    branches: [ "main" ]

jobs:
  # Stage 1: Install Angular
  install-angular:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client-side

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: client-side/package-lock.json

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

  # Stage 2: Code Analysis with SonarQube Cloud
  sonarcloud:
    needs: install-angular
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: SonarQubeScan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
        with:
          projectBaseDir: client-side/src
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.sources=src/
            -Dsonar.verbose=true

  # Stage 3: Build Docker image
  docker-build:
    needs: [install-angular, sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to GHCR
        run: echo "${{ secrets.REGISTRY_PASS }}" | docker login ghcr.io -u "${{ secrets.REGISTRY_USER }}" --password-stdin

      - name: Build Docker image
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/frontend:${{ github.sha }}
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV
          docker build -t $IMAGE .

  # Stage 4: Trivy Security Scan
  trivy-scan:
    needs: docker-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download Trivy
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE }}
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

  # Stage 5: Push Docker image (only if scan passes)
  docker-push:
    needs: trivy-scan
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GHCR
        run: echo "${{ secrets.REGISTRY_PASS }}" | docker login ghcr.io -u "${{ secrets.REGISTRY_USER }}" --password-stdin

      - name: Push Docker image
        run: docker push ${{ env.IMAGE }}
