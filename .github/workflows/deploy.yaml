name: Deploy Microservices to AWS EC2

on:
  push:
    branches-ignore:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            set -e

            sudo apt update -y && sudo apt upgrade -y

            # Check & install Docker if missing
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
              newgrp docker
            else
              echo "Docker already installed"
            fi

            # Check & install Docker Compose if missing
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing Docker Compose..."
              DOCKER_COMPOSE_VERSION=2.29.2
              sudo curl -L "https://github.com/docker/compose/releases/download/v${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              docker-compose --version
            else
              echo "Docker Compose already installed"
            fi
            # Navigate to your app directory (adjust if needed)
            cd ~/ || {
              echo "Cloning fresh repo..."
              sudo apt update -y && sudo apt upgrade -y
              sudo apt install -y git unzip
              git clone https://github.com/${{ github.repository }}.git
              cd Crypto-Portfolio-Microservice-Application
            }

            # Pull latest changes
            git fetch origin main
            git reset --hard origin/main

            # Create .env file dynamically
            if [ -f ".env" ]; then
              sudo rm .env
            fi
            cat > .env <<EOL
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            COIN_MARKET_CAP_API_KEY=${{ secrets.COIN_MARKET_CAP_API_KEY }}
            ETHERSCAN_API_KEY=${{ secrets.ETHERSCAN_API_KEY }}
            POLYGON_API_KEY=${{ secrets.POLYGON_API_KEY }}
            AVALANCHE_API_KEY=${{ secrets.AVALANCHE_API_KEY }}
            EOL

            # Run docker-compose
            docker-compose down
            docker-compose up -d --build
